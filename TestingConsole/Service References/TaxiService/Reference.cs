//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestingConsole.TaxiService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://taxiservice.michaeldv.nl/webservices", ConfigurationName="TaxiService.ITaxiService")]
    public interface ITaxiService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetTaxiPriceInfo", ReplyAction="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetTaxiPriceInfoResponse" +
            "")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaxiBooking))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServicesDataContracts.TaxiBookingRequest))]
        ServicesDataContracts.TaxiPriceInfo GetTaxiPriceInfo(ServicesDataContracts.TaxiPriceInfoRequest taxiPriceInfoRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetTaxiPriceInfo", ReplyAction="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetTaxiPriceInfoResponse" +
            "")]
        System.Threading.Tasks.Task<ServicesDataContracts.TaxiPriceInfo> GetTaxiPriceInfoAsync(ServicesDataContracts.TaxiPriceInfoRequest taxiPriceInfoRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://taxiservice.michaeldv.nl/webservices/ITaxiService/DoTaxiBooking", ReplyAction="http://taxiservice.michaeldv.nl/webservices/ITaxiService/DoTaxiBookingResponse")]
        TaxiBooking DoTaxiBooking(ServicesDataContracts.TaxiBookingRequest taxiBookingRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://taxiservice.michaeldv.nl/webservices/ITaxiService/DoTaxiBooking", ReplyAction="http://taxiservice.michaeldv.nl/webservices/ITaxiService/DoTaxiBookingResponse")]
        System.Threading.Tasks.Task<TaxiBooking> DoTaxiBookingAsync(ServicesDataContracts.TaxiBookingRequest taxiBookingRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetUserBookings", ReplyAction="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetUserBookingsResponse")]
        ServicesDataContracts.UserBookings GetUserBookings(ServicesDataContracts.UserBookingsRequest userBookingsRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetUserBookings", ReplyAction="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetUserBookingsResponse")]
        System.Threading.Tasks.Task<ServicesDataContracts.UserBookings> GetUserBookingsAsync(ServicesDataContracts.UserBookingsRequest userBookingsRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://taxiservice.michaeldv.nl/webservices/ITaxiService/CancelBooking", ReplyAction="http://taxiservice.michaeldv.nl/webservices/ITaxiService/CancelBookingResponse")]
        bool CancelBooking(ServicesDataContracts.CancelBookingRequest cancelBookingRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://taxiservice.michaeldv.nl/webservices/ITaxiService/CancelBooking", ReplyAction="http://taxiservice.michaeldv.nl/webservices/ITaxiService/CancelBookingResponse")]
        System.Threading.Tasks.Task<bool> CancelBookingAsync(ServicesDataContracts.CancelBookingRequest cancelBookingRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetCitys", ReplyAction="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetCitysResponse")]
        string[] GetCitys(string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetCitys", ReplyAction="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetCitysResponse")]
        System.Threading.Tasks.Task<string[]> GetCitysAsync(string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetAddress", ReplyAction="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetAddressResponse")]
        string[] GetAddress(ServicesDataContracts.GetAddressRequest getAddressRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetAddress", ReplyAction="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetAddressResponse")]
        System.Threading.Tasks.Task<string[]> GetAddressAsync(ServicesDataContracts.GetAddressRequest getAddressRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetSpecialLocations", ReplyAction="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetSpecialLocationsRespo" +
            "nse")]
        string[] GetSpecialLocations(string locationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetSpecialLocations", ReplyAction="http://taxiservice.michaeldv.nl/webservices/ITaxiService/GetSpecialLocationsRespo" +
            "nse")]
        System.Threading.Tasks.Task<string[]> GetSpecialLocationsAsync(string locationType);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITaxiServiceChannel : TestingConsole.TaxiService.ITaxiService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TaxiServiceClient : System.ServiceModel.ClientBase<TestingConsole.TaxiService.ITaxiService>, TestingConsole.TaxiService.ITaxiService {
        
        public TaxiServiceClient() {
        }
        
        public TaxiServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TaxiServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TaxiServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TaxiServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServicesDataContracts.TaxiPriceInfo GetTaxiPriceInfo(ServicesDataContracts.TaxiPriceInfoRequest taxiPriceInfoRequest) {
            return base.Channel.GetTaxiPriceInfo(taxiPriceInfoRequest);
        }
        
        public System.Threading.Tasks.Task<ServicesDataContracts.TaxiPriceInfo> GetTaxiPriceInfoAsync(ServicesDataContracts.TaxiPriceInfoRequest taxiPriceInfoRequest) {
            return base.Channel.GetTaxiPriceInfoAsync(taxiPriceInfoRequest);
        }
        
        public TaxiBooking DoTaxiBooking(ServicesDataContracts.TaxiBookingRequest taxiBookingRequest) {
            return base.Channel.DoTaxiBooking(taxiBookingRequest);
        }
        
        public System.Threading.Tasks.Task<TaxiBooking> DoTaxiBookingAsync(ServicesDataContracts.TaxiBookingRequest taxiBookingRequest) {
            return base.Channel.DoTaxiBookingAsync(taxiBookingRequest);
        }
        
        public ServicesDataContracts.UserBookings GetUserBookings(ServicesDataContracts.UserBookingsRequest userBookingsRequest) {
            return base.Channel.GetUserBookings(userBookingsRequest);
        }
        
        public System.Threading.Tasks.Task<ServicesDataContracts.UserBookings> GetUserBookingsAsync(ServicesDataContracts.UserBookingsRequest userBookingsRequest) {
            return base.Channel.GetUserBookingsAsync(userBookingsRequest);
        }
        
        public bool CancelBooking(ServicesDataContracts.CancelBookingRequest cancelBookingRequest) {
            return base.Channel.CancelBooking(cancelBookingRequest);
        }
        
        public System.Threading.Tasks.Task<bool> CancelBookingAsync(ServicesDataContracts.CancelBookingRequest cancelBookingRequest) {
            return base.Channel.CancelBookingAsync(cancelBookingRequest);
        }
        
        public string[] GetCitys(string country) {
            return base.Channel.GetCitys(country);
        }
        
        public System.Threading.Tasks.Task<string[]> GetCitysAsync(string country) {
            return base.Channel.GetCitysAsync(country);
        }
        
        public string[] GetAddress(ServicesDataContracts.GetAddressRequest getAddressRequest) {
            return base.Channel.GetAddress(getAddressRequest);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAddressAsync(ServicesDataContracts.GetAddressRequest getAddressRequest) {
            return base.Channel.GetAddressAsync(getAddressRequest);
        }
        
        public string[] GetSpecialLocations(string locationType) {
            return base.Channel.GetSpecialLocations(locationType);
        }
        
        public System.Threading.Tasks.Task<string[]> GetSpecialLocationsAsync(string locationType) {
            return base.Channel.GetSpecialLocationsAsync(locationType);
        }
    }
}
