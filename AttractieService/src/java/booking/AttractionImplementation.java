
package booking;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AttractionImplementation", targetNamespace = "http://booking/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AttractionImplementation {


    /**
     * 
     * @return
     *     returns java.util.List<booking.AttractieType>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAttractionTypes", targetNamespace = "http://booking/", className = "booking.GetAttractionTypes")
    @ResponseWrapper(localName = "getAttractionTypesResponse", targetNamespace = "http://booking/", className = "booking.GetAttractionTypesResponse")
    @Action(input = "http://booking/AttractionImplementation/getAttractionTypesRequest", output = "http://booking/AttractionImplementation/getAttractionTypesResponse")
    public List<AttractieType> getAttractionTypes();

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bookAttraction", targetNamespace = "http://booking/", className = "booking.BookAttraction")
    @ResponseWrapper(localName = "bookAttractionResponse", targetNamespace = "http://booking/", className = "booking.BookAttractionResponse")
    @Action(input = "http://booking/AttractionImplementation/bookAttractionRequest", output = "http://booking/AttractionImplementation/bookAttractionResponse")
    public int bookAttraction(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        List<OrderedTicket> arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        XMLGregorianCalendar arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<booking.Attractie>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAttractions", targetNamespace = "http://booking/", className = "booking.GetAttractions")
    @ResponseWrapper(localName = "getAttractionsResponse", targetNamespace = "http://booking/", className = "booking.GetAttractionsResponse")
    @Action(input = "http://booking/AttractionImplementation/getAttractionsRequest", output = "http://booking/AttractionImplementation/getAttractionsResponse")
    public List<Attractie> getAttractions(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<booking.Region>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRegions", targetNamespace = "http://booking/", className = "booking.GetRegions")
    @ResponseWrapper(localName = "getRegionsResponse", targetNamespace = "http://booking/", className = "booking.GetRegionsResponse")
    @Action(input = "http://booking/AttractionImplementation/getRegionsRequest", output = "http://booking/AttractionImplementation/getRegionsResponse")
    public List<Region> getRegions(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<booking.City>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCities", targetNamespace = "http://booking/", className = "booking.GetCities")
    @ResponseWrapper(localName = "getCitiesResponse", targetNamespace = "http://booking/", className = "booking.GetCitiesResponse")
    @Action(input = "http://booking/AttractionImplementation/getCitiesRequest", output = "http://booking/AttractionImplementation/getCitiesResponse")
    public List<City> getCities(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<booking.Booking>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBooking", targetNamespace = "http://booking/", className = "booking.GetBooking")
    @ResponseWrapper(localName = "getBookingResponse", targetNamespace = "http://booking/", className = "booking.GetBookingResponse")
    @Action(input = "http://booking/AttractionImplementation/getBookingRequest", output = "http://booking/AttractionImplementation/getBookingResponse")
    public List<Booking> getBooking(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<booking.Country>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCountries", targetNamespace = "http://booking/", className = "booking.GetCountries")
    @ResponseWrapper(localName = "getCountriesResponse", targetNamespace = "http://booking/", className = "booking.GetCountriesResponse")
    @Action(input = "http://booking/AttractionImplementation/getCountriesRequest", output = "http://booking/AttractionImplementation/getCountriesResponse")
    public List<Country> getCountries();

}
