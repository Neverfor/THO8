//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaxiClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlightDTO", Namespace="http://schemas.datacontract.org/2004/07/FlightService.DataModels")]
    [System.SerializableAttribute()]
    public partial class FlightDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AirplaneIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AirplaneNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ArrivalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DepartureDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartureIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DestinationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlightIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AirplaneId {
            get {
                return this.AirplaneIdField;
            }
            set {
                if ((this.AirplaneIdField.Equals(value) != true)) {
                    this.AirplaneIdField = value;
                    this.RaisePropertyChanged("AirplaneId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AirplaneName {
            get {
                return this.AirplaneNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AirplaneNameField, value) != true)) {
                    this.AirplaneNameField = value;
                    this.RaisePropertyChanged("AirplaneName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ArrivalDate {
            get {
                return this.ArrivalDateField;
            }
            set {
                if ((this.ArrivalDateField.Equals(value) != true)) {
                    this.ArrivalDateField = value;
                    this.RaisePropertyChanged("ArrivalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DepartureDate {
            get {
                return this.DepartureDateField;
            }
            set {
                if ((this.DepartureDateField.Equals(value) != true)) {
                    this.DepartureDateField = value;
                    this.RaisePropertyChanged("DepartureDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartureId {
            get {
                return this.DepartureIdField;
            }
            set {
                if ((this.DepartureIdField.Equals(value) != true)) {
                    this.DepartureIdField = value;
                    this.RaisePropertyChanged("DepartureId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartureName {
            get {
                return this.DepartureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartureNameField, value) != true)) {
                    this.DepartureNameField = value;
                    this.RaisePropertyChanged("DepartureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DestinationId {
            get {
                return this.DestinationIdField;
            }
            set {
                if ((this.DestinationIdField.Equals(value) != true)) {
                    this.DestinationIdField = value;
                    this.RaisePropertyChanged("DestinationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationName {
            get {
                return this.DestinationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationNameField, value) != true)) {
                    this.DestinationNameField = value;
                    this.RaisePropertyChanged("DestinationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlightId {
            get {
                return this.FlightIdField;
            }
            set {
                if ((this.FlightIdField.Equals(value) != true)) {
                    this.FlightIdField = value;
                    this.RaisePropertyChanged("FlightId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AirportDTO", Namespace="http://schemas.datacontract.org/2004/07/FlightService.DataModels")]
    [System.SerializableAttribute()]
    public partial class AirportDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AiportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AiportId {
            get {
                return this.AiportIdField;
            }
            set {
                if ((this.AiportIdField.Equals(value) != true)) {
                    this.AiportIdField = value;
                    this.RaisePropertyChanged("AiportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PassengerDTO", Namespace="http://schemas.datacontract.org/2004/07/FlightService.DataModels")]
    [System.SerializableAttribute()]
    public partial class PassengerDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassengerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassengerId {
            get {
                return this.PassengerIdField;
            }
            set {
                if ((this.PassengerIdField.Equals(value) != true)) {
                    this.PassengerIdField = value;
                    this.RaisePropertyChanged("PassengerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Place {
            get {
                return this.PlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceField, value) != true)) {
                    this.PlaceField = value;
                    this.RaisePropertyChanged("Place");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookingDTO", Namespace="http://schemas.datacontract.org/2004/07/FlightService.DataModels")]
    [System.SerializableAttribute()]
    public partial class BookingDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TaxiClient.ServiceReference1.FlightDTO FlightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TaxiClient.ServiceReference1.PassengerDTO[] PassengersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookingId {
            get {
                return this.BookingIdField;
            }
            set {
                if ((this.BookingIdField.Equals(value) != true)) {
                    this.BookingIdField = value;
                    this.RaisePropertyChanged("BookingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TaxiClient.ServiceReference1.FlightDTO Flight {
            get {
                return this.FlightField;
            }
            set {
                if ((object.ReferenceEquals(this.FlightField, value) != true)) {
                    this.FlightField = value;
                    this.RaisePropertyChanged("Flight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TaxiClient.ServiceReference1.PassengerDTO[] Passengers {
            get {
                return this.PassengersField;
            }
            set {
                if ((object.ReferenceEquals(this.PassengersField, value) != true)) {
                    this.PassengersField = value;
                    this.RaisePropertyChanged("Passengers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://flightservice.themaopdracht8.nl", ConfigurationName="ServiceReference1.FlightService")]
    public interface FlightService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://flightservice.themaopdracht8.nl/FlightService/ShowFlightsByDeparture", ReplyAction="http://flightservice.themaopdracht8.nl/FlightService/ShowFlightsByDepartureRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://flightservice.themaopdracht8.nl/FlightService/ShowFlightsByDepartureExcept" +
            "ionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        TaxiClient.ServiceReference1.FlightDTO[] ShowFlightsByDeparture(int departureId, int destinationId, System.DateTime departureDate, int passengers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://flightservice.themaopdracht8.nl/FlightService/ShowFlightsByDeparture", ReplyAction="http://flightservice.themaopdracht8.nl/FlightService/ShowFlightsByDepartureRespon" +
            "se")]
        System.Threading.Tasks.Task<TaxiClient.ServiceReference1.FlightDTO[]> ShowFlightsByDepartureAsync(int departureId, int destinationId, System.DateTime departureDate, int passengers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://flightservice.themaopdracht8.nl/FlightService/ShowFlightsByArrival", ReplyAction="http://flightservice.themaopdracht8.nl/FlightService/ShowFlightsByArrivalResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://flightservice.themaopdracht8.nl/FlightService/ShowFlightsByArrivalExceptio" +
            "nFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        TaxiClient.ServiceReference1.FlightDTO[] ShowFlightsByArrival(int departureId, int destinationId, System.DateTime arrivalDate, int passengers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://flightservice.themaopdracht8.nl/FlightService/ShowFlightsByArrival", ReplyAction="http://flightservice.themaopdracht8.nl/FlightService/ShowFlightsByArrivalResponse" +
            "")]
        System.Threading.Tasks.Task<TaxiClient.ServiceReference1.FlightDTO[]> ShowFlightsByArrivalAsync(int departureId, int destinationId, System.DateTime arrivalDate, int passengers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://flightservice.themaopdracht8.nl/FlightService/GetAirports", ReplyAction="http://flightservice.themaopdracht8.nl/FlightService/GetAirportsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://flightservice.themaopdracht8.nl/FlightService/GetAirportsExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        TaxiClient.ServiceReference1.AirportDTO[] GetAirports(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://flightservice.themaopdracht8.nl/FlightService/GetAirports", ReplyAction="http://flightservice.themaopdracht8.nl/FlightService/GetAirportsResponse")]
        System.Threading.Tasks.Task<TaxiClient.ServiceReference1.AirportDTO[]> GetAirportsAsync(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://flightservice.themaopdracht8.nl/FlightService/BookFlight", ReplyAction="http://flightservice.themaopdracht8.nl/FlightService/BookFlightResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://flightservice.themaopdracht8.nl/FlightService/BookFlightExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        TaxiClient.ServiceReference1.BookingDTO BookFlight(int flightId, TaxiClient.ServiceReference1.PassengerDTO[] passengers, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://flightservice.themaopdracht8.nl/FlightService/BookFlight", ReplyAction="http://flightservice.themaopdracht8.nl/FlightService/BookFlightResponse")]
        System.Threading.Tasks.Task<TaxiClient.ServiceReference1.BookingDTO> BookFlightAsync(int flightId, TaxiClient.ServiceReference1.PassengerDTO[] passengers, string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://flightservice.themaopdracht8.nl/FlightService/GetPersonalBookings", ReplyAction="http://flightservice.themaopdracht8.nl/FlightService/GetPersonalBookingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://flightservice.themaopdracht8.nl/FlightService/GetPersonalBookingsException" +
            "Fault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        TaxiClient.ServiceReference1.BookingDTO[] GetPersonalBookings(string userToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://flightservice.themaopdracht8.nl/FlightService/GetPersonalBookings", ReplyAction="http://flightservice.themaopdracht8.nl/FlightService/GetPersonalBookingsResponse")]
        System.Threading.Tasks.Task<TaxiClient.ServiceReference1.BookingDTO[]> GetPersonalBookingsAsync(string userToken);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FlightServiceChannel : TaxiClient.ServiceReference1.FlightService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlightServiceClient : System.ServiceModel.ClientBase<TaxiClient.ServiceReference1.FlightService>, TaxiClient.ServiceReference1.FlightService {
        
        public FlightServiceClient() {
        }
        
        public FlightServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FlightServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TaxiClient.ServiceReference1.FlightDTO[] ShowFlightsByDeparture(int departureId, int destinationId, System.DateTime departureDate, int passengers) {
            return base.Channel.ShowFlightsByDeparture(departureId, destinationId, departureDate, passengers);
        }
        
        public System.Threading.Tasks.Task<TaxiClient.ServiceReference1.FlightDTO[]> ShowFlightsByDepartureAsync(int departureId, int destinationId, System.DateTime departureDate, int passengers) {
            return base.Channel.ShowFlightsByDepartureAsync(departureId, destinationId, departureDate, passengers);
        }
        
        public TaxiClient.ServiceReference1.FlightDTO[] ShowFlightsByArrival(int departureId, int destinationId, System.DateTime arrivalDate, int passengers) {
            return base.Channel.ShowFlightsByArrival(departureId, destinationId, arrivalDate, passengers);
        }
        
        public System.Threading.Tasks.Task<TaxiClient.ServiceReference1.FlightDTO[]> ShowFlightsByArrivalAsync(int departureId, int destinationId, System.DateTime arrivalDate, int passengers) {
            return base.Channel.ShowFlightsByArrivalAsync(departureId, destinationId, arrivalDate, passengers);
        }
        
        public TaxiClient.ServiceReference1.AirportDTO[] GetAirports(string searchValue) {
            return base.Channel.GetAirports(searchValue);
        }
        
        public System.Threading.Tasks.Task<TaxiClient.ServiceReference1.AirportDTO[]> GetAirportsAsync(string searchValue) {
            return base.Channel.GetAirportsAsync(searchValue);
        }
        
        public TaxiClient.ServiceReference1.BookingDTO BookFlight(int flightId, TaxiClient.ServiceReference1.PassengerDTO[] passengers, string userToken) {
            return base.Channel.BookFlight(flightId, passengers, userToken);
        }
        
        public System.Threading.Tasks.Task<TaxiClient.ServiceReference1.BookingDTO> BookFlightAsync(int flightId, TaxiClient.ServiceReference1.PassengerDTO[] passengers, string userToken) {
            return base.Channel.BookFlightAsync(flightId, passengers, userToken);
        }
        
        public TaxiClient.ServiceReference1.BookingDTO[] GetPersonalBookings(string userToken) {
            return base.Channel.GetPersonalBookings(userToken);
        }
        
        public System.Threading.Tasks.Task<TaxiClient.ServiceReference1.BookingDTO[]> GetPersonalBookingsAsync(string userToken) {
            return base.Channel.GetPersonalBookingsAsync(userToken);
        }
    }
}
