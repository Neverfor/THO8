//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaxiClient.HotelService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hotel", Namespace="http://schemas.datacontract.org/2004/07/HotelService")]
    [System.SerializableAttribute()]
    public partial class Hotel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short HotelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PictureUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short HotelId {
            get {
                return this.HotelIdField;
            }
            set {
                if ((this.HotelIdField.Equals(value) != true)) {
                    this.HotelIdField = value;
                    this.RaisePropertyChanged("HotelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] PictureUrl {
            get {
                return this.PictureUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureUrlField, value) != true)) {
                    this.PictureUrlField = value;
                    this.RaisePropertyChanged("PictureUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoomType", Namespace="http://schemas.datacontract.org/2004/07/HotelService")]
    [System.SerializableAttribute()]
    public partial class RoomType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MaxPersonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RoomTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MaxPersons {
            get {
                return this.MaxPersonsField;
            }
            set {
                if ((this.MaxPersonsField.Equals(value) != true)) {
                    this.MaxPersonsField = value;
                    this.RaisePropertyChanged("MaxPersons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RoomTypeId {
            get {
                return this.RoomTypeIdField;
            }
            set {
                if ((this.RoomTypeIdField.Equals(value) != true)) {
                    this.RoomTypeIdField = value;
                    this.RaisePropertyChanged("RoomTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookingRow", Namespace="http://schemas.datacontract.org/2004/07/HotelService")]
    [System.SerializableAttribute()]
    public partial class BookingRow : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short BookingRowIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TaxiClient.HotelService.RoomType RoomTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short BookingRowId {
            get {
                return this.BookingRowIdField;
            }
            set {
                if ((this.BookingRowIdField.Equals(value) != true)) {
                    this.BookingRowIdField = value;
                    this.RaisePropertyChanged("BookingRowId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TaxiClient.HotelService.RoomType RoomType {
            get {
                return this.RoomTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomTypeField, value) != true)) {
                    this.RoomTypeField = value;
                    this.RaisePropertyChanged("RoomType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Booking", Namespace="http://schemas.datacontract.org/2004/07/HotelService")]
    [System.SerializableAttribute()]
    public partial class Booking : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ArrivalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short BookingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TaxiClient.HotelService.BookingRow[] BookingRowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DepartureDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TaxiClient.HotelService.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TotalPersonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ArrivalDate {
            get {
                return this.ArrivalDateField;
            }
            set {
                if ((this.ArrivalDateField.Equals(value) != true)) {
                    this.ArrivalDateField = value;
                    this.RaisePropertyChanged("ArrivalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short BookingId {
            get {
                return this.BookingIdField;
            }
            set {
                if ((this.BookingIdField.Equals(value) != true)) {
                    this.BookingIdField = value;
                    this.RaisePropertyChanged("BookingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TaxiClient.HotelService.BookingRow[] BookingRow {
            get {
                return this.BookingRowField;
            }
            set {
                if ((object.ReferenceEquals(this.BookingRowField, value) != true)) {
                    this.BookingRowField = value;
                    this.RaisePropertyChanged("BookingRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DepartureDate {
            get {
                return this.DepartureDateField;
            }
            set {
                if ((this.DepartureDateField.Equals(value) != true)) {
                    this.DepartureDateField = value;
                    this.RaisePropertyChanged("DepartureDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TaxiClient.HotelService.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TotalPersons {
            get {
                return this.TotalPersonsField;
            }
            set {
                if ((this.TotalPersonsField.Equals(value) != true)) {
                    this.TotalPersonsField = value;
                    this.RaisePropertyChanged("TotalPersons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/HotelService")]
    public enum Status : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        reserved = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        cancelled = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        expired = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://hotelservice.com", ConfigurationName="HotelService.IHotelBookingService")]
    public interface IHotelBookingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hotelservice.com/IHotelBookingService/getHotels", ReplyAction="http://hotelservice.com/IHotelBookingService/getHotelsResponse")]
        TaxiClient.HotelService.Hotel[] getHotels(string name, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hotelservice.com/IHotelBookingService/getHotels", ReplyAction="http://hotelservice.com/IHotelBookingService/getHotelsResponse")]
        System.Threading.Tasks.Task<TaxiClient.HotelService.Hotel[]> getHotelsAsync(string name, string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hotelservice.com/IHotelBookingService/getRoomTypesFromHotel", ReplyAction="http://hotelservice.com/IHotelBookingService/getRoomTypesFromHotelResponse")]
        TaxiClient.HotelService.RoomType[] getRoomTypesFromHotel(short hotelId, System.DateTime arrivalDate, System.DateTime departureDate, short totalPersons);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hotelservice.com/IHotelBookingService/getRoomTypesFromHotel", ReplyAction="http://hotelservice.com/IHotelBookingService/getRoomTypesFromHotelResponse")]
        System.Threading.Tasks.Task<TaxiClient.HotelService.RoomType[]> getRoomTypesFromHotelAsync(short hotelId, System.DateTime arrivalDate, System.DateTime departureDate, short totalPersons);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hotelservice.com/IHotelBookingService/bookRoom", ReplyAction="http://hotelservice.com/IHotelBookingService/bookRoomResponse")]
        short bookRoom(short hotelId, TaxiClient.HotelService.BookingRow[] bookingRows, System.DateTime arrivalDate, System.DateTime departureDate, short totalPersons, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hotelservice.com/IHotelBookingService/bookRoom", ReplyAction="http://hotelservice.com/IHotelBookingService/bookRoomResponse")]
        System.Threading.Tasks.Task<short> bookRoomAsync(short hotelId, TaxiClient.HotelService.BookingRow[] bookingRows, System.DateTime arrivalDate, System.DateTime departureDate, short totalPersons, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hotelservice.com/IHotelBookingService/getBooking", ReplyAction="http://hotelservice.com/IHotelBookingService/getBookingResponse")]
        TaxiClient.HotelService.Booking getBooking(short bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hotelservice.com/IHotelBookingService/getBooking", ReplyAction="http://hotelservice.com/IHotelBookingService/getBookingResponse")]
        System.Threading.Tasks.Task<TaxiClient.HotelService.Booking> getBookingAsync(short bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hotelservice.com/IHotelBookingService/GetBookingsFromUser", ReplyAction="http://hotelservice.com/IHotelBookingService/GetBookingsFromUserResponse")]
        TaxiClient.HotelService.Booking[] GetBookingsFromUser(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hotelservice.com/IHotelBookingService/GetBookingsFromUser", ReplyAction="http://hotelservice.com/IHotelBookingService/GetBookingsFromUserResponse")]
        System.Threading.Tasks.Task<TaxiClient.HotelService.Booking[]> GetBookingsFromUserAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hotelservice.com/IHotelBookingService/CancelBooking", ReplyAction="http://hotelservice.com/IHotelBookingService/CancelBookingResponse")]
        bool CancelBooking(short bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://hotelservice.com/IHotelBookingService/CancelBooking", ReplyAction="http://hotelservice.com/IHotelBookingService/CancelBookingResponse")]
        System.Threading.Tasks.Task<bool> CancelBookingAsync(short bookingId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHotelBookingServiceChannel : TaxiClient.HotelService.IHotelBookingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HotelBookingServiceClient : System.ServiceModel.ClientBase<TaxiClient.HotelService.IHotelBookingService>, TaxiClient.HotelService.IHotelBookingService {
        
        public HotelBookingServiceClient() {
        }
        
        public HotelBookingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HotelBookingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HotelBookingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HotelBookingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TaxiClient.HotelService.Hotel[] getHotels(string name, string location) {
            return base.Channel.getHotels(name, location);
        }
        
        public System.Threading.Tasks.Task<TaxiClient.HotelService.Hotel[]> getHotelsAsync(string name, string location) {
            return base.Channel.getHotelsAsync(name, location);
        }
        
        public TaxiClient.HotelService.RoomType[] getRoomTypesFromHotel(short hotelId, System.DateTime arrivalDate, System.DateTime departureDate, short totalPersons) {
            return base.Channel.getRoomTypesFromHotel(hotelId, arrivalDate, departureDate, totalPersons);
        }
        
        public System.Threading.Tasks.Task<TaxiClient.HotelService.RoomType[]> getRoomTypesFromHotelAsync(short hotelId, System.DateTime arrivalDate, System.DateTime departureDate, short totalPersons) {
            return base.Channel.getRoomTypesFromHotelAsync(hotelId, arrivalDate, departureDate, totalPersons);
        }
        
        public short bookRoom(short hotelId, TaxiClient.HotelService.BookingRow[] bookingRows, System.DateTime arrivalDate, System.DateTime departureDate, short totalPersons, string token) {
            return base.Channel.bookRoom(hotelId, bookingRows, arrivalDate, departureDate, totalPersons, token);
        }
        
        public System.Threading.Tasks.Task<short> bookRoomAsync(short hotelId, TaxiClient.HotelService.BookingRow[] bookingRows, System.DateTime arrivalDate, System.DateTime departureDate, short totalPersons, string token) {
            return base.Channel.bookRoomAsync(hotelId, bookingRows, arrivalDate, departureDate, totalPersons, token);
        }
        
        public TaxiClient.HotelService.Booking getBooking(short bookingId) {
            return base.Channel.getBooking(bookingId);
        }
        
        public System.Threading.Tasks.Task<TaxiClient.HotelService.Booking> getBookingAsync(short bookingId) {
            return base.Channel.getBookingAsync(bookingId);
        }
        
        public TaxiClient.HotelService.Booking[] GetBookingsFromUser(string token) {
            return base.Channel.GetBookingsFromUser(token);
        }
        
        public System.Threading.Tasks.Task<TaxiClient.HotelService.Booking[]> GetBookingsFromUserAsync(string token) {
            return base.Channel.GetBookingsFromUserAsync(token);
        }
        
        public bool CancelBooking(short bookingId) {
            return base.Channel.CancelBooking(bookingId);
        }
        
        public System.Threading.Tasks.Task<bool> CancelBookingAsync(short bookingId) {
            return base.Channel.CancelBookingAsync(bookingId);
        }
    }
}
